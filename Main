''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' Main (Module)
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
Option Explicit

'AS/400 static values (required by IBM to be set as Long)
    Public Const modLength As Long = 8          'Course "mods" and Student ID numbers are always 8 digits long
    Public Const addTime As Long = 10           'In Milliseconds; cAS400 defaults this to "1"
    Public Const forward As Long = 1            'For cAS400.SearchText, as per AS/400 method requirement
    Public Const reverse As Long = 2            'For cAS400.SearchText, as per AS/400 method requirement
    Public Const EnterKey As String = "[Enter]" 'For cAS400.SendKeys; Enter keypress
    Public Const F3Key As String = "[pf3]"      'For cAS400.SendKeys; F-Key keypress
    Public Const F4Key As String = "[pf4]"      'For cAS400.SendKeys; F-Key keypress
    Public Const F5Key As String = "[pf5]"      'For cAS400.SendKeys; F-Key keypress
    Public Const F11Key As String = "[pf11]"    'For cAS400.SendKeys; F-Key keypress
    Public Const F12Key As String = "[pf12]"    'For cAS400.SendKeys; F-Key keypress

'Activate/Deactivates the core error handling
    Public Const DebugFlag As Boolean = True    'False for error handling; True for no error handling

'Command labels
    Public Const noEntry As String = "noEntry"
    Public Const commSet As String = "Perform SetText"
    Public Const commGet As String = "Perform GetText"
    Public Const commSend As String = "Perform SendKeys"
    Public Const commSearch As String = "Perform SearchText"
    Public Const savedSet As String = "SetText from Variable"
    Public Const commCustom As String = "Call Custom Procedure"
    
'For printing to the immediate window
    Public Const windowLineSeperator As String = vbNewLine & _
        "||***************************************************||" & vbNewLine

Public Sub RunRegistration(ByVal RegistrationForm As MSForms.UserForm)
    
    '''''''''''''''''''''''''''
    ' General values
    '''''''''''''''''''''''''''

    '''''''''''''''''''''''''''
    ' Set objects
    '''''''''''''''''''''''''''
    If DebugFlag Then On Error GoTo 0 Else On Error GoTo ClassDeclareError

    Dim Exception As cException                 'Stores the error and stack information
    Dim Student As cStudent                     'Stores the student and userform information
    Dim AS400 As cAS400                         'Stores the AS/400 objects and methods
    Dim AddressBookCommands As Collection       'Stores the necessary Registration commands
    Dim EnrollmentCommands As Collection        'Stores the necessary Registration commands
    Dim StatusBox As Object                     'Stores reference to the userform's status textbox
    
    Set Exception = New cException
    Set Student = New cStudent
    Set AS400 = New cAS400
    Set RegistrationCommands = New Collection
    Set StatusBox = RegistrationForm.Status_Textbox
    
    '''''''''''''''''''''''''''
    ' Settings
    '''''''''''''''''''''''''''
    With Exception
        .ErrMessage = "" & vbNewLine
        .ErrMessage = windowLineSeperator
        .Push "Main.RunRegistration"
    End With
    
    StatusBox.Value = "...   ...   ...   Performing the pre-enrollment check   ...   ...   ..."

    TurnOffExcelDefaults Exception
    
    '''''''''''''''''''''''''''
    ' Load objects
    '''''''''''''''''''''''''''
    Exception.ErrMessage = "Loading the class objects"
    If DebugFlag Then On Error GoTo 0 Else On Error GoTo UserformError
    
    '// LoadUserformObjects StudentFile, RegistrationForm, Exception
    
    If DebugFlag Then On Error GoTo 0 Else On Error GoTo AS400Error
    AS400.InitializeApp StudentFile.GetSession, Exception, addTime
    
    If DebugFlag Then On Error GoTo 0 Else On Error GoTo CommandsError
    Set AddressBookCommands = Spool(forAddressBook, Exception)
    Set EnrollmentCommands = Spool(forEnrollment, Exception)
    
    '''''''''''''''''''''''''''
    ' Pre-enrollment check
    '''''''''''''''''''''''''''
    Exception.ErrMessage = "Performing the pre-enrollment check"
    If DebugFlag Then On Error GoTo 0 Else On Error GoTo ErrorOnEnrollmentCheck
    
    '// If ApproveRegistration(StudentFile, redMessage, blueMessage, Exception) = False Then
    
    '''''''''''''''''''''''''''
    ' Main Execution
    '''''''''''''''''''''''''''
    Execute AddressBookCommands, Student, AS400, Exception
    
    '// Reveal StudentID
    
    Execute EnrollmentCommands, Student, AS400, Exception
    

'''''''''''''''''''''''''''
' Cleanup
'''''''''''''''''''''''''''
Cleanup:
    
Exit Sub

'''''''''''''''''''''''''''
' Error Handling
'''''''''''''''''''''''''''

ClassDeclareError:

UserformError:

AS400Error:

CommandsError:

ErrorOnEnrollmentCheck:
    
End Sub
