''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' cException (Class)
'
' Relies on a call stack approach to help report the location of errors
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'GENERAL PROPERTIES
Private pErrFlag As Boolean
Private pErrNumber As Integer
Private pErrDescription As String
Private pMessage As String
Private pHandling As String

'CALL STACK PROPERTIES
Private TopItem As StackItem

'LogErrorDescription Function
'LogErrorNumberFunction
'WriteErrorToFile Function

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' LOCAL PROCEDURES
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
Private Sub Class_Initialize()
    pErrFlag = False
End Sub

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' STACK PROPERTIES AND PROCEDURES
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

Public Sub Push(ByVal str As String)
    'Pushes a new stack item to a stack
    Dim NewTop As StackItem
    Set NewTop = New StackItem
    NewTop.Value = str
    Set NewTop.NextItem = TopItem
    Set TopItem = NewTop
End Sub

Private Property Get StackIsEmpty() As Boolean
  StackIsEmpty = (TopItem Is Nothing)
End Property

Public Function Pop() As String
  If Not StackIsEmpty Then
    Pop = TopItem.Value
    Set TopItem = TopItem.NextItem
  End If
End Function

Public Function Unwind() As String
    Dim str As String
    Do Until StackIsEmpty
    str = Pop & vbNewLine & str
    Loop
    Unwind = str
End Function

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' ErrFlag property
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
Public Property Let ErrFlag(Value As Boolean)
    pErrFlag = Value
End Property
Public Property Get ErrFlag() As Boolean
    ErrFlag = pErrFlag
End Property

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' ErrDescription property
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
Public Property Let ErrDescription(Value As String)
    pErrDescription = Value
End Property
Public Property Get ErrDescription() As String
    ErrDescription = pErrDescription
End Property

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' ErrDescription property
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
Public Property Let ErrDescription(Value As String)
    pErrDescription = Value
End Property
Public Property Get ErrDescription() As String
    ErrDescription = pErrDescription
End Property

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' Message property
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
Public Property Let Message(Value As String)
    pMessage = Value
End Property
Public Property Get Message() As String
    Message = pMessage
End Property


''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' Handling property
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
Public Property Let Handling(Value As String)
    pHandling = Value
End Property
Public Property Get Handling() As String
    Handling = pHandling
End Property
