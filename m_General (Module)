''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' m_General (Module)
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

Option Explicit

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' RestrictToPositiveWholeNumbers (Public Sub)
'Restricts the textbox to accept only numerals
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
Public Sub RestrictToPostiveWholeNumbers(KeyAscii As MSForms.ReturnInteger)

Select Case KeyAscii
     Case Asc("0") To Asc("9")
     Case Else
         KeyAscii = 0
 End Select

End Sub

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' RestrictToPostiveFloatNumbers (Public Sub)
'Restricts the textbox to accept only real numbers
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
Public Sub RestrictToPostiveFloatNumbers(KeyAscii As MSForms.ReturnInteger, str_textbox As String)

Select Case KeyAscii
     Case Asc("0") To Asc("9")
     Case Asc(".")
         If InStr(1, str_textbox, ".") > 0 Then
             KeyAscii = 0
         End If
     Case Else
         KeyAscii = 0
 End Select

End Sub

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' Excel Defaults (Public Subs)
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
Public Sub TurnOffExcelDefaults(ByRef Exception As cException)

    'Pass error handling up the call stack
    On Error GoTo 0

    Exception.Push "[m_General.TurnOffExcelDefaults]"

    Application.ScreenUpdating = False
    Application.DisplayAlerts = False
    Application.Calculation = xlCalculationManual
    
    Exception.Pop
    
End Sub
Public Sub TurnOnExcelDefaults(ByRef Exception As cException)

    'Pass error handling up the call stack
    On Error GoTo 0

    Exception.Push "[m_General.TurnOnExcelDefaults]"
    
    Application.Calculation = xlCalculationAutomatic
    Application.DisplayAlerts = True
    Application.ScreenUpdating = True
    
    Exception.Pop
    
End Sub


''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' InitializeAS400 (Public Sub)
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
Public Sub InitializeAS400(ByRef AS400 As cAS400, ByVal Letter As String, ByRef Exception As cException)

    'Pass error handling up the call stack
    On Error GoTo 0
    
    Dim ConnList As Object
    
    Exception.Push "[m_General.InitializeAS400]"
    
    AS400.SessionName = Trim(Letter)

    Set AS400.Session = CreateObject("PCOMM.autECLSession")
    Set AS400.Metrics = CreateObject("PCOMM.autECLWinMetrics")
    Set AS400.Connection = CreateObject("PCOMM.autECLConnList")
    Set ConnList = CreateObject("PCOMM.autECLConnList")

    AS400.Session.SetConnectionByName (AS400.SessionName)
    AS400.Metrics.SetConnectionByName (AS400.SessionName)
    
    ConnList.Refresh

    Exception.Pop

End Sub

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' WaitForReady (Public Sub)
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
Public Sub WaitForReady(ByVal AS400 As cAS400, ByRef Exception As cException)

    'Pass error handling up the call stack
    On Error GoTo 0

    Exception.Push "[m_General.WaitForReady]"

    Dim InitialWaitTime As Long
    InitialWaitTime = 50

    AS400.Presentation.Wait InitialWaitTime
    AS400.Operator.WaitForAppAvailable
    AS400.Operator.WaitForInputReady
    AS400.Presentation.Wait AS400.Milliseconds
    
    Exception.Pop

End Sub

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' NavigateToHome
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
Public Function NavigateToHome(ByVal AS400 As cAS400, ByRef Exception As cException) As Boolean

    On Error GoTo NavigationError
    
    Exception.Push "[m_General.NavigateToHome]"
    
    NavigateToHome = True

    Dim GetTextString As String
    GetTextString = vbNullString

    Dim MaxAttempts As Integer
    MaxAttempts = 4
    
    Dim i As Integer
    i = 0
    
    Dim Forward As Long
    Forward = 1
    
    Dim PrevTime As Long
    PrevTime = AS400.Milliseconds
    AS400.Milliseconds = 100
    
    AS400.Metrics.Active = True
    
StartLoop:
    Do
    
        WaitForReady AS400, Exception
        GetTextString = AS400.Presentation.GetText(1, 2, 8)
        WaitForReady AS400, Exception
    
        Select Case GetTextString
        
            'PS: BNIMAIN (Destination)
            Case " BNIMAIN"
                WaitForReady AS400, Exception
                Exit Do
                
            'PS: BNICS
            Case " BNICS  "
                AS400.Presentation.SendKeys "[pf12]"
                WaitForReady AS400, Exception
                Exit Do
                
            'PS: 66300
            Case " 66300  "
                AS400.Presentation.SendKeys ("[pf3]")
                WaitForReady AS400, Exception
                Exit Do
                
            'PS: 66340
            Case " 66340  "
                AS400.Presentation.SendKeys ("[pf3]")
                WaitForReady AS400, Exception
                Exit Do
                
            'PS: Student Service Inquiry (1.14.)
            Case "603131_B"
                AS400.Presentation.SendKeys "[pf3]"
            
            'Address Book Information
            Case "01051   "
                AS400.Presentation.SendKeys ("[pf3]")
                
            'PS: (1.14.), Customer Ledger Inquiry
            Case " 032002 "
                AS400.Presentation.SendKeys ("[pf3]")

            'PS: (1.14.), ICS Cancellation Maintenance
            Case "631001  "
                AS400.Presentation.SendKeys ("[pf3]")
                
            'PS: (1.14.), Student Supplemental
            Case "60110   "
                AS400.Presentation.SendKeys ("[pf3]")

            'PS: (1.14.), Student Course Master
            Case "60210   "
                AS400.Presentation.SendKeys ("[pf3]")

            'PS: (1.14.), Shipping Screen
            Case "42045   "
                AS400.Presentation.SendKeys ("[pf3]")

            'PS: ICS Accounting Main Menu
            Case " ICSACCT"
                AS400.Presentation.SendKeys ("[pf12]")

            'PS: Main Menu
            Case "ICSMAIN "
                AS400.Presentation.SetText "6", 20, 7
                AS400.Presentation.SendKeys ("[Enter]")

            'Library List Selection
            Case " 98VL   "
                AS400.Presentation.SetText "1", 6, 10
                AS400.Presentation.SendKeys ("[Enter]")

            'Product File Maintenance
            Case " BNIPROD"
                AS400.Presentation.SendKeys ("[pf12]")
                
            'Note Maintenance
            Case " 55192  "
                AS400.Presentation.SendKeys ("[pf3]")
                
            'Education Screen
            Case " 55192  "
                AS400.Presentation.SendKeys ("[pf3]")
                
            'Name Search
            Case "603132_B"
                AS400.Presentation.SendKeys ("[pf3]")
                
            Case Else
                AS400.Presentation.SendKeys ("[pf3]")
                WaitForReady AS400, Exception
                AS400.Presentation.SendKeys ("[pf12]")

        End Select
        
        'loop counter
        i = i + 1
        
        WaitForReady AS400, Exception
    
    Loop Until i >= MaxAttempts
    
    GetTextString = AS400.Presentation.GetText(1, 3, 7)
    If GetTextString = "BNIMAIN" Then
        NavigateToHome = True
    Else
        NavigateToHome = True
    End If
    
Cleanup:

    AS400.Milliseconds = PrevTime
    Exception.Pop
    
Exit Function

NavigationError:
    NavigateToHome = False
    Exception.ErrFlag = True
    Exception.ErrDescription = Err.Description
    Exception.ErrNumber = Err.Number
GoTo Cleanup

End Function



