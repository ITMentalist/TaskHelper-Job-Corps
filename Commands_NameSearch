''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' Commands_NameSearch (Module)
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
Option Explicit

'Action Type
    Public Const buttonPrimary As String = "Run Primary Name Search Button"
    Public Const buttonAction As String = "Run Page Up/Down Button"
    Public Const buttonMulti As String = "Run Multi-Choice Button"

'AS400 specific values
    Const rowHome As Long = 19
    Const colHome As Long = 7
    Const colMailing As Long = 8
    Const lenMailing As Long = 37
    Const colPhone As Long = 49
    Const lenPhone As Long = 26
    Const optionCustomerService As String = "1"
    Const optionEducationInquiry As String = "15"
    
'Reference names for specific variables
    Const tagAlphaName As String = "AlphaName from Textbox"
    Const tagM1 As String = "Mailing Name Textbox 1"
    Const tagM2 As String = "Mailing Name Textbox 2"
    Const tagM3 As String = "Mailing Name Textbox 3"
    Const tagM4 As String = "Mailing Name Textbox 4"
    Const tagM5 As String = "Mailing Name Textbox 5"
    Const tagM6 As String = "Mailing Name Textbox 6"
    Const tagM7 As String = "Mailing Name Textbox 7"
    Const tagM8 As String = "Mailing Name Textbox 8"
    Const tagP1 As String = "Phone Number Textbox 1"
    Const tagP2 As String = "Phone Number Textbox 2"
    Const tagP3 As String = "Phone Number Textbox 3"
    Const tagP4 As String = "Phone Number Textbox 4"
    Const tagP5 As String = "Phone Number Textbox 5"
    Const tagP6 As String = "Phone Number Textbox 6"
    Const tagP7 As String = "Phone Number Textbox 7"
    Const tagP8 As String = "Phone Number Textbox 8"
    
Public Function NavigateToNameSearchCommands(Optional ByRef Exception As cException) As Collection
    
    'Pass error handling up the call stack
    On Error GoTo 0
    
    If Not Exception Is Nothing Then Exception.Push "Commands_NameSearch.NavigateToNameSearchCommands"

    '''''''''''''''''''''''''''
    ' Prepare
    '''''''''''''''''''''''''''
    Dim toCommands As Collection
    Set toCommands = New Collection
    
    '''''''''''''''''''''''''''
    ' Add Commands
    '''''''''''''''''''''''''''
    'Navigate to Education Inquiry
    AddCommand toCommands, commCustom, procNavigateHome, , , , , moduleName, Exception
    AddCommand toCommands, commSet, optionCustomerService, rowHome, colHome, , , moduleName, Exception
    AddCommand toCommands, commSend, EnterKey, , , , , moduleName, Exception
    
    AddCommand toCommands, commSet, optionEducationInquiry, rowHome, colHome, , , moduleName, Exception
    AddCommand toCommands, commSend, EnterKey, , , , , moduleName, Exception
    
    'Navigate to Name Search
    AddCommand toCommands, commSend, F1Key, , , , , moduleName, Exception
    AddCommand toCommands, commSend, EnterKey, , , , , moduleName, Exception
    
    '''''''''''''''''''''''''''
    ' Finalize
    '''''''''''''''''''''''''''
    Set NavigateToNameSearchCommands = toCommands
    
    If Not Exception Is Nothing Then Exception.Pop
    
End Function

Public Function PopulatePrimaryNameSearchCommands(Optional ByRef Exception As cException) As Collection
    
    'Pass error handling up the call stack
    On Error GoTo 0
    
    If Not Exception Is Nothing Then Exception.Push "Commands_NameSearch.PopulatePrimaryNameSearchCommands"

    '''''''''''''''''''''''''''
    ' Prepare
    '''''''''''''''''''''''''''
    Dim toCommands As Collection
    Set toCommands = New Collection
        
    '''''''''''''''''''''''''''
    ' Add Commands
    '''''''''''''''''''''''''''
    'Get names
    AddCommand toCommands, commGet, tagM1, 7, colMailing, lenMailing, , moduleReg, Exception
    AddCommand toCommands, commGet, tagM2, 8, colMailing, lenMailing, , moduleReg, Exception
    AddCommand toCommands, commGet, tagM3, 9, colMailing, lenMailing, , moduleReg, Exception
    AddCommand toCommands, commGet, tagM4, 10, colMailing, lenMailing, , moduleReg, Exception
    AddCommand toCommands, commGet, tagM5, 11, colMailing, lenMailing, , moduleReg, Exception
    AddCommand toCommands, commGet, tagM6, 12, colMailing, lenMailing, , moduleReg, Exception
    AddCommand toCommands, commGet, tagM7, 13, colMailing, lenMailing, , moduleReg, Exception
    AddCommand toCommands, commGet, tagM8, 14, colMailing, lenMailing, , moduleReg, Exception
    
    'Get phone numbers
    AddCommand toCommands, commGet, tagP1, 7, colPhone, lenPhone, , moduleReg, Exception
    AddCommand toCommands, commGet, tagP2, 8, colPhone, lenPhone, , moduleReg, Exception
    AddCommand toCommands, commGet, tagP3, 9, colPhone, lenPhone, , moduleReg, Exception
    AddCommand toCommands, commGet, tagP4, 10, colPhone, lenPhone, , moduleReg, Exception
    AddCommand toCommands, commGet, tagP5, 11, colPhone, lenPhone, , moduleReg, Exception
    AddCommand toCommands, commGet, tagP6, 12, colPhone, lenPhone, , moduleReg, Exception
    AddCommand toCommands, commGet, tagP7, 13, colPhone, lenPhone, , moduleReg, Exception
    AddCommand toCommands, commGet, tagP8, 14, colPhone, lenPhone, , moduleReg, Exception

    '''''''''''''''''''''''''''
    ' Finalize
    '''''''''''''''''''''''''''
    Set PopulatePrimaryNameSearchCommands = toCommands
    
    If Not Exception Is Nothing Then Exception.Pop
    
End Function

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' NameSearch_ReturnStringToSet
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
Public Function NameSearch_ReturnStringToSet(ByVal Command As cCommand, ByVal Student As cStudent, _
    Optional ByRef Exception As cException) As String
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' For the Commands_NameSearch module
' References a hard-coded value so as to pass information _
    from the cStudent object to the cAS400's SetText execution
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
    On Error GoTo 0
    
    Dim tempString As String
    
    If Not Exception Is Nothing Then Exception.Push "Commands_NameSearch.ReturnStringToSet"
    
    Select Case Command.StringToAction
    
        Case tagAlphaName: tempString = Student.GetAlphaName
            
        Case Else: tempString = ""
    
    End Select
    
    NameSearch_ReturnStringToSet = tempString
    
    If Not Exception Is Nothing Then Exception.Pop
    
End Function
    
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' NameSearch_SaveToLocation
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
Public Sub NameSearch_SaveToLocation(ByVal Result_to_Save As String, ByVal Command As cCommand, _
    ByRef Student As cStudent, Optional ByRef Exception As cException)
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' For the Commands_NameSearch module
' References a hard-coded value so as to pass information _
    from the cStudent object to the cAS400's GetText execution
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
    On Error GoTo 0
    
    If Not Exception Is Nothing Then Exception.Push "Commands_NameSearch.SaveToLocation"
    
    Select Case Command.StringToAction
    
        Case tagM1: Student.FieldMailingName1 = DetermineString(Result_to_Save)
        
        Case tagM2: Student.FieldMailingName2 = DetermineString(Result_to_Save)
        
        Case tagM3: Student.FieldMailingName3 = DetermineString(Result_to_Save)
        
        Case tagM4: Student.FieldMailingName4 = DetermineString(Result_to_Save)
        
        Case tagM5: Student.FieldMailingName5 = DetermineString(Result_to_Save)
        
        Case tagM6: Student.FieldMailingName6 = DetermineString(Result_to_Save)
        
        Case tagM7: Student.FieldMailingName7 = DetermineString(Result_to_Save)
        
        Case tagM8: Student.FieldMailingName8 = DetermineString(Result_to_Save)
        
        Case tagP1: Student.FieldPhone1 = DetermineString(Result_to_Save)
        
        Case tagP2: Student.FieldPhone2 = DetermineString(Result_to_Save)
        
        Case tagP3: Student.FieldPhone3 = DetermineString(Result_to_Save)
        
        Case tagP4: Student.FieldPhone4 = DetermineString(Result_to_Save)
        
        Case tagP5: Student.FieldPhone5 = DetermineString(Result_to_Save)
        
        Case tagP6: Student.FieldPhone6 = DetermineString(Result_to_Save)
        
        Case tagP7: Student.FieldPhone7 = DetermineString(Result_to_Save)
        
        Case tagP8: Student.FieldPhone8 = DetermineString(Result_to_Save)
    
    End Select
    
    
    If Not Exception Is Nothing Then Exception.Pop
    
End Sub

Private Function DetermineString(Result_to_Save) As String

    Dim lenCount As Integer
    lenCount = Len(Result_to_Save)
    
    If lenCount >= 1 Then
        DetermineString = Result_to_Save
    Else
        DetermineString = Space(5) & "(Empty)"
    End If
    
End Function

Public Sub PrepareNameSearchTextboxes(ByRef NameForm As MSForms.UserForm, Optional ByRef Exception As cExeption)
    
    'Pass error handling up the call stack
    On Error GoTo 0
    
    If Not Exception Is Nothing Then Exception.Push "Commands_NameSearch.PrepareNameSearchTextboxes"
    
    'Clear/Adjust textbox values
    NameForm.ActionL1_Textbox = vbNullString
    NameForm.ActionL2_Textbox = vbNullString
    NameForm.ActionL3_Textbox = vbNullString
    NameForm.ActionL4_Textbox = vbNullString
    NameForm.ActionL5_Textbox = vbNullString
    NameForm.ActionL6_Textbox = vbNullString
    NameForm.ActionL7_Textbox = vbNullString
    NameForm.ActionL8_Textbox = vbNullString
    NameForm.MailingNameL1_Textbox = " ..." & Space(5) & " ..."
    NameForm.MailingNameL2_Textbox = " ..." & Space(5) & " ..."
    NameForm.MailingNameL3_Textbox = " ..." & Space(5) & " ..."
    NameForm.MailingNameL4_Textbox = " ..." & Space(5) & " ..."
    NameForm.MailingNameL5_Textbox = " ..." & Space(5) & " ..."
    NameForm.MailingNameL6_Textbox = " ..." & Space(5) & " ..."
    NameForm.MailingNameL7_Textbox = " ..." & Space(5) & " ..."
    NameForm.MailingNameL8_Textbox = " ..." & Space(5) & " ..."
    NameForm.ShowPhoneL1_Textbox = " ..." & Space(5) & " ..."
    NameForm.ShowPhoneL2_Textbox = " ..." & Space(5) & " ..."
    NameForm.ShowPhoneL3_Textbox = " ..." & Space(5) & " ..."
    NameForm.ShowPhoneL4_Textbox = " ..." & Space(5) & " ..."
    NameForm.ShowPhoneL5_Textbox = " ..." & Space(5) & " ..."
    NameForm.ShowPhoneL6_Textbox = " ..." & Space(5) & " ..."
    NameForm.ShowPhoneL7_Textbox = " ..." & Space(5) & " ..."
    NameForm.ShowPhoneL8_Textbox = " ..." & Space(5) & " ..."
    
    If Not Exception Is Nothing Then Exception.Pop
    
End Sub

Public Sub StoreSettingsForNameSearches(ByRef Student As cStudent, ByRef NameForm As MSForms.UserForm, _
    Optional ByRef Exception As cException)
    
    Set Student.SessionComboBox = NameForm.Session_ComboBox
    Set Student.FirstNameTextbox = NameForm.Firstname_Textbox
    Set Student.LastNameTextbox = NameForm.Lastname_Textbox
    Set Student.MiddleNameTextbox = NameForm.Middlename_Textbox
    
    Set Student.FieldMailingName1 = NameForm.MailingNameL1_Textbox
    Set Student.FieldMailingName2 = NameForm.MailingNameL2_Textbox
    Set Student.FieldMailingName3 = NameForm.MailingNameL3_Textbox
    Set Student.FieldMailingName4 = NameForm.MailingNameL4_Textbox
    Set Student.FieldMailingName5 = NameForm.MailingNameL5_Textbox
    Set Student.FieldMailingName6 = NameForm.MailingNameL6_Textbox
    Set Student.FieldMailingName7 = NameForm.MailingNameL7_Textbox
    Set Student.FieldMailingName8 = NameForm.MailingNameL8_Textbox
    
    Set Student.FieldPhone1 = NameForm.ShowPhoneL1_Textbox
    Set Student.FieldPhone2 = NameForm.ShowPhoneL2_Textbox
    Set Student.FieldPhone3 = NameForm.ShowPhoneL3_Textbox
    Set Student.FieldPhone4 = NameForm.ShowPhoneL4_Textbox
    Set Student.FieldPhone5 = NameForm.ShowPhoneL5_Textbox
    Set Student.FieldPhone6 = NameForm.ShowPhoneL6_Textbox
    Set Student.FieldPhone7 = NameForm.ShowPhoneL7_Textbox
    Set Student.FieldPhone8 = NameForm.ShowPhoneL8_Textbox
    
End Sub

Public Function StoreActionTextboxes(ByRef NameForm As MSForms.UserForm, _
    Optional ByRef Exception As cException) As Object()
    
    Dim tempArray(8) As Object
    
    Set tempArray(1) = NameForm.ActionL1_Textbox
    Set tempArray(2) = NameForm.ActionL2_Textbox
    Set tempArray(3) = NameForm.ActionL3_Textbox
    Set tempArray(4) = NameForm.ActionL4_Textbox
    Set tempArray(5) = NameForm.ActionL5_Textbox
    Set tempArray(6) = NameForm.ActionL6_Textbox
    Set tempArray(7) = NameForm.ActionL7_Textbox
    Set tempArray(8) = NameForm.ActionL8_Textbox
    
    StoreActionTextboxes = tempArray()

End Function

Public Function UserHasSelectedName(ByRef NameForm As MSForms.Userform, Optional ByRef Exception As cException) As Boolean
    
    Dim i As Integer
    Const arrSize As Integer = 8

    Dim baseRow As Long
    Const actionCol As Long = 5
    
    Dim storeTextboxes() As Object
    ReDim storeTextboxes(arrSize) As Object
    
    UserHasSelectedName = False
    
    baseRow = 7
    storeTextboxes = StoreActionTextboxes(NameForm, Exception)
    
    Do
    
        If Len(Trim(storeTextboxes(i).Value)) >= 1 Then
        
            AS400.SetText Trim(storeTextboxes(i).Value), baseRow, actionCol
            ' // PostResultsToForm
            UserHasSelectedName = True
                
        Else
                
            baseRow = baseRow + 1
                
        End If
                
        i = i + 1
                
    Loop While UserHasSelectedName = False Or i <= arrSize 
    
End Function

Public Sub ClearActionBoxes(ByRef NameForm As MSForms.Userform, Optional ByRef Exception As cException)
    
    
End Sub
