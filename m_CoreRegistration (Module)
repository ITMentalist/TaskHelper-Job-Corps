''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' m_CoreRegistration (Module)
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

Option Explicit

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' RunRegistration (Private Sub)
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
Public Sub RunRegistration(ByVal RegForm As MSForms.UserForm)

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' General variables
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
    
    Dim GetTextString As String
    GetTextString = vbNullString

    Dim RedMessage As String
    RedMessage = vbTab & "FINAL CONFIRMATION" & vbNewLine & vbNewLine & _
        "One or more errors have occurred. Please resolve the following issues before proceeding." & vbNewLine & vbNewLine
    Dim BlueMessage As String
    BlueMessage = vbTab & "FINAL CONFIRMATION" & vbNewLine & vbNewLine & _
        "Please confirm the following information before proceeding with the enrollment script." & vbNewLine & vbNewLine
    

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' Set the class modules
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

    On Error GoTo ClassError

    Dim Exception As cException
    Set Exception = New cException
    Exception.Push "[m_CoreRegistration.RunRegistration]"
    
    Dim StudentFile As cStudentFile
    Set StudentFile = New cStudentFile
    
    Dim AS400 As cAS400
    Set AS400 = New cAS400
    
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' Loads the class objects
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

    TurnOffExcelDefaults Exception
    
    On Error GoTo UserformError
    LoadUserformObjects StudentFile, RegForm, Exception
    
    On Error GoTo AS400Error
    InitializeAS400 AS400, StudentFile.GetSession, Exception
    AS400.Handling = Trim(StudentFile.GetAutomation)
    
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
PreEnrollmentCheck:
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
    
    If ApproveRegistration(StudentFile, AS400, Exception, RedMessage, BlueMessage) = False Then
        GoTo Cleanup
    End If
    
    RedMessage = vbNullString
    BlueMessage = vbNullString
    
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' Set the subsequent settings based on the user's selection
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
    
    Select Case AS400.Handling
        Case "Fast"
            On Error GoTo AcknowledgeError
            AS400.Milliseconds = 75
        Case "Slow"
            On Error GoTo AcknowledgeError
            AS400.Milliseconds = 900
        Case "StopEach"
            On Error GoTo AcknowledgeError
            AS400.Milliseconds = 75
        Case "Debug"
            On Error GoTo 0
            AS400.Milliseconds = 400
        Case Else
            On Error GoTo 0
            AS400.Milliseconds = 400
    End Select
    
    NavigateToHome AS400, Exception
    If Not AS400.Presentation.SearchText("BNIMAIN", 1, 1, 3) Then
        NavigateToHome AS400, Exception
    End If
    
    
    'Address Book w/ Parent option
    AS400.Presentation.SetText "1", 19, 7
    AS400.Presentation.SendKeys "[Enter]"
    WaitForReady AS400, Exception
    AS400.Presentation.SetText "3", 19, 7
    If ProceedToNextScreen("[Enter]", AS400, Exception) = True Then GoTo AbortAutomation
    
    'Action Code
    AS400.Presentation.SetText "A", 3, 19              'Action Code
    'First-Middle-Last Name
    AS400.Presentation.SetText StudentFile.GetMailingName, 4, 19
    'Last-First-Middle Name
    AS400.Presentation.SetText StudentFile.GetAlphaName, 6, 19
    'Address Line 1
    AS400.Presentation.SetText StudentFile.GetAddressL1, 8, 19
    'Address Line 2
    AS400.Presentation.SetText StudentFile.GetAddressL2, 9, 19
    'Address Line 3
    AS400.Presentation.SetText StudentFile.GetAddressL3, 10, 19
    'Address Line 4
    AS400.Presentation.SetText StudentFile.GetAddressL4, 11, 19
    'Zip Code
    AS400.Presentation.SetText StudentFile.GetZipCode, 12, 19
    'City
    AS400.Presentation.SetText StudentFile.GetCity, 12, 55
    'State
    AS400.Presentation.SetText StudentFile.GetState, 13, 55
    'Search Type
    AS400.Presentation.SetText "TR", 14, 19
    'Parent #
    AS400.Presentation.SetText StudentFile.GetParentCode, 17, 55
    'Prefix Code
    AS400.Presentation.SetText StudentFile.GetPrefixCode, 23, 19
    
    If ProceedToNextScreen("[Enter]", AS400, Exception) = True Then GoTo AbortAutomation
    
    'StudentID#
    StudentFile.StudentID = Trim(AS400.Presentation.GetText(4, 32, 8))
    If ProceedToNextScreen("[Enter]", AS400, Exception) = True Then GoTo AbortAutomation
    
    
    'Enter-F3 sequence
    '#1
    If ProceedToNextScreen("[Enter]", AS400, Exception) = True Then GoTo AbortAutomation
    If ProceedToNextScreen("[pf3]", AS400, Exception) = True Then GoTo AbortAutomation
    '#2
    If ProceedToNextScreen("[Enter]", AS400, Exception) = True Then GoTo AbortAutomation
    If ProceedToNextScreen("[pf3]", AS400, Exception) = True Then GoTo AbortAutomation
    '#3
    If ProceedToNextScreen("[Enter]", AS400, Exception) = True Then GoTo AbortAutomation
    If ProceedToNextScreen("[pf3]", AS400, Exception) = True Then GoTo AbortAutomation
    '#4
    If ProceedToNextScreen("[Enter]", AS400, Exception) = True Then GoTo AbortAutomation
    If ProceedToNextScreen("[pf3]", AS400, Exception) = True Then GoTo AbortAutomation
    
    'Web Times
    AS400.Presentation.SetText StudentFile.GetWebStartTime, 13, 23
    AS400.Presentation.SetText StudentFile.GetWebEndTime, 14, 23
    
    '#5
    If ProceedToNextScreen("[Enter]", AS400, Exception) = True Then GoTo AbortAutomation
    If ProceedToNextScreen("[pf3]", AS400, Exception) = True Then GoTo AbortAutomation

    'School Type
    AS400.Presentation.SetText "HS", 6, 23
    'Degree Code
    AS400.Presentation.SetText "N", 10, 23
    'Gender
    AS400.Presentation.SetText StudentFile.GetGender, 19, 57
    
    '#6
    If ProceedToNextScreen("[Enter]", AS400, Exception) = True Then GoTo AbortAutomation
    If ProceedToNextScreen("[pf3]", AS400, Exception) = True Then GoTo AbortAutomation
    
    'Back to the address book
    If ProceedToNextScreen("[Enter]", AS400, Exception) = True Then GoTo AbortAutomation
    AS400.Presentation.SendKeys "[Enter]"
    WaitForReady AS400, Exception
    
    'Email
    AS400.Presentation.SendKeys "[pf5]"
    WaitForReady AS400, Exception
    AS400.Presentation.SendKeys "[pf4]"
    WaitForReady AS400, Exception
    AS400.Presentation.SetText "C", 3, 18
    AS400.Presentation.SetText "E", 11, 62
    AS400.Presentation.SetText StudentFile.GetEmail, 10, 4
    If ProceedToNextScreen("[Enter]", AS400, Exception) = True Then GoTo AbortAutomation
    AS400.Presentation.SendKeys "[pf3]"
    WaitForReady AS400, Exception
    AS400.Presentation.SendKeys "[pf3]"
    WaitForReady AS400, Exception
    
    NavigateToHome AS400, Exception
    
    'Full program enrollment
    AS400.Presentation.SetText "20", 19, 7
    WaitForReady AS400, Exception
    AS400.Presentation.SendKeys "[Enter]"
    WaitForReady AS400, Exception
    
    'PS screen 66300
    AS400.Presentation.SetText "A", 3, 20
    AS400.Presentation.SetText StudentFile.StudentID, 4, 20
    AS400.Presentation.SetText StudentFile.GetSalesperson, 6, 20
    AS400.Presentation.SetText StudentFile.GetProgramNumber, 7, 20
    
    If Len(StudentFile.GetPONumber) >= 1 Then
        AS400.Presentation.SetText StudentFile.GetPONumber, 8, 20
    End If
    
    If ProceedToNextScreen("[Enter]", AS400, Exception) = True Then GoTo AbortAutomation
    
    'Check for PS screen 66302
    GetTextString = Trim(AS400.Presentation.GetText(7, 32, 5))
    WaitForReady AS400, Exception
    If GetTextString = "66302" Then
        AS400.Presentation.SendKeys "[Enter]"
        WaitForReady AS400, Exception
    End If
    GetTextString = vbNullString
    
    'Tuition
    AS400.Presentation.SetText "PA", 11, 11
    AS400.Presentation.SetText "TUI", 11, 16
    AS400.Presentation.SetText StudentFile.GetProgramTuition, 11, 54
    
    If ProceedToNextScreen("[Enter]", AS400, Exception) = True Then GoTo AbortAutomation
    
    'Enter payment terms
    AS400.Presentation.SendKeys "[Enter]"
    WaitForReady AS400, Exception
    AS400.Presentation.SendKeys "[Enter]"
    
    If ProceedToNextScreen("[pf3]", AS400, Exception) = True Then GoTo AbortAutomation
    If ProceedToNextScreen("[pf11]", AS400, Exception) = True Then GoTo AbortAutomation
    
    'Navigate to Student Inquiry
    AS400.Presentation.SendKeys "[pf3]"
    WaitForReady AS400, Exception
    AS400.Presentation.SetText "1", 19, 7
    AS400.Presentation.SendKeys "[Enter]"
    WaitForReady AS400, Exception
    AS400.Presentation.SetText "14", 19, 7
    AS400.Presentation.SendKeys "[Enter]"
    WaitForReady AS400, Exception
    AS400.Presentation.SetText StudentFile.StudentID, 3, 13
    AS400.Presentation.SendKeys "[Enter]"
    WaitForReady AS400, Exception
    
Cleanup:

    TurnOnExcelDefaults Exception
    Exception.Pop
    
Exit Sub

ClassError:
    RedMessage = RedMessage & "[m_CoreRegistration.RunRegistration]" & Space(1) & _
        "> A critical error has occurred while initializing the class modules:" & vbNewLine & _
        "Error #" & Err.Number & Space(1) & Err.Description & vbNewLine & vbNewLine
Resume Next

UserformError:
    Exception.ErrFlag = True
    RedMessage = RedMessage & Exception.StackTop & Space(1) & _
        "> A userform object has failed to load" & Space(1) & "Error #" & Err.Number & vbNewLine & vbNewLine
Resume Next

AS400Error:
    Exception.ErrFlag = True
    RedMessage = RedMessage & Exception.StackTop & Space(1) & _
        "> The AS400 has failed to initialize" & vbNewLine & _
        "Error #" & Err.Number & Space(1) & Err.Description & vbNewLine & vbNewLine
Resume Next

AcknowledgeError:
    Exception.ErrFlag = True
Resume Next

AbortAutomation:
    MsgBox "The automation has been canceled", vbInformation, "Enrollment"
GoTo Cleanup

End Sub
