''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' RegistrationMain (Module)
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' Contains the core procedures for handling agency enrollments
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

Option Explicit

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' RunRegistration (Public Sub)
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
Public Sub RunRegistration(ByVal RegForm As MSForms.UserForm)
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' Purpose:      Excel-To-AS400 glue procedure; performs an _
                    enrollment from a userform to AS/400 _
                    client-side access

' Input:        The registration userform object

' Output:       Procedural actions

' Assumptions:  The user is reasonably attempting a legitimate enrollment _
                No changes are made to the AS/400 that would cause this _
                    procedure to "run off the rails"

' Handles Errors:   Yes
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

    '''''''''''''''''''''''''''
    ' General variables
    '''''''''''''''''''''''''''
    Dim StartTime As Single: StartTime = Timer
    
    Dim GetTextString As String: GetTextString = vbNullString

    Dim RedMessage As String: RedMessage = vbTab & "FINAL CONFIRMATION" & _
        vbNewLine & vbNewLine & "One or more errors have occurred. Please" & _
        "resolve the following issues before proceeding." & vbNewLine & vbNewLine
    
    Dim BlueMessage As String: BlueMessage = vbTab & "FINAL CONFIRMATION" & _
        vbNewLine & vbNewLine & "Please confirm the following information " & _
        "before proceeding with the enrollment script." & vbNewLine & vbNewLine

    Dim Status As Object: Set Status = RegForm.Status_Textbox
    Status.Value = "...   ...   ...   Performing the pre-enrollment check   ...   ...   ..."
    
    'AS/400 modular values
    Dim Entry As String: Entry = vbNullString
    Dim Row As Long: Row = 0
    Dim Col As Long: Col = 0
    Dim Length As Long: Length = 0
    
    'AS/400 static values
    Const ModLength As Long = 8

    '''''''''''''''''''''''''''
    ' Set the class modules
    '''''''''''''''''''''''''''
    On Error GoTo ClassError

    Dim Exception As cException: Set Exception = New cException
    Exception.Push "RegistrationMain.RunRegistration"
    
    Dim StudentFile As cStudentFile: Set StudentFile = New cStudentFile
    
    Dim AS400 As cAS400: Set AS400 = New cAS400
    
    '''''''''''''''''''''''''''
    ' Loads the class objects
    '''''''''''''''''''''''''''
    TurnOffExcelDefaults Exception
    
    On Error GoTo UserformError
    LoadUserformObjects StudentFile, RegForm, Exception
    
    On Error GoTo AS400Error
    InitializeAS400 AS400, StudentFile.GetSession, Exception
    AS400.Handling = Trim(StudentFile.GetAutomation)
    
    '''''''''''''''''''''''''''
    ' Pre-enrollment check
    '''''''''''''''''''''''''''
PreEnrollmentCheck:
    If ApproveRegistration(StudentFile, AS400, RedMessage, BlueMessage, Exception) = False Then
        GoTo Cleanup
    End If
    
    RedMessage = vbNullString
    BlueMessage = vbNullString
    
    Status.Value = "...   ...   ...   Performing Enrollment  (Please wait)   ...   ...   ..."
    
    '''''''''''''''''''''''''''
    ' Set the subsequent settings based on the user's selection
    '''''''''''''''''''''''''''
    
    Select Case LCase(AS400.Handling)
        Case "fast"
            On Error GoTo AcknowledgeError
            AS400.Time = 25
        Case "slow"
            On Error GoTo AcknowledgeError
            AS400.Time = 200
        Case "stopeach"
            On Error GoTo AcknowledgeError
            AS400.Time = 200
        Case "debug"
            On Error GoTo 0
            AS400.Time = 200
        Case "test"
            On Error GoTo 0
            GoTo HiddenTestOption
        Case Else
            On Error GoTo 0
            AS400.Time = 25
    End Select
    
    AS400.Activate = True
    
    If NavigateToHome(AS400, Exception) = False Then GoTo NavigationFailure

    '''''''''''''''''''''''''''
    ' Address Book registration
    '''''''''''''''''''''''''''
StartEnrollment:

    'Address Book w/ Parent option
    Entry = "1": Row = 19: Col = 7: Length = 0
    AS400.SetText Entry, Row, Col
    
    AS400.SendKeys "[Enter]"
    Pause AS400, Exception
    
    Entry = "3": Row = 19: Col = 7: Length = 0
    AS400.SetText Entry, Row, Col
    
    If ProceedToNextScreen("[Enter]", AS400, Exception) = True Then GoTo EndAutomation
    
    Entry = "": Row = 1: Col = 2: Length = 5
    GetTextString = AS400.GetText(Row, Col, Length)
    
    If Not GetTextString = "01051" Then GoTo NavigationFailure
    GetTextString = vbNullString
    
    'Action Code
    Entry = "A": Row = 3: Col = 19: Length = 0
    AS400.SetText Entry, Row, Col
    
    'First-Middle-Last Name
    Entry = StudentFile.GetMailingName: Row = 4: Col = 19: Length = 0
    AS400.SetText Entry, Row, Col
    
    'Last-First-Middle Name
    Entry = StudentFile.GetAlphaName: Row = 6: Col = 19: Length = 0
    AS400.SetText Entry, Row, Col

    'Search Type
    Entry = "TR": Row = 14: Col = 19: Length = 0
    AS400.SetText Entry, Row, Col
    
    'Parent #
    Entry = StudentFile.GetParentCode: Row = 17: Col = 55: Length = 0
    AS400.SetText Entry, Row, Col
    
    'Prefix Code
    Entry = StudentFile.GetPrefixCode: Row = 23: Col = 19: Length = 0
    AS400.SetText Entry, Row, Col
    
    'Long Number
    If Len(StudentFile.GetLongNumber) >= 1 Then
        Entry = StudentFile.GetLongNumber: Row = 2: Col = 60: Length = 0
        AS400.SetText Entry, Row, Col
    End If
    
    If ProceedToNextScreen("[Enter]", AS400, Exception) = True Then GoTo EndAutomation
    
    'StudentID#
    Entry = "": Row = 1: Col = 3: Length = 6
    GetTextString = AS400.GetText(Row, Col, Length)
    
    If Not GetTextString = "010512" Then GoTo NavigationFailure
    GetTextString = vbNullString
    Pause AS400, Exception
    
    Entry = "": Row = 4: Col = 32: Length = ModLength
    StudentFile.StudentID = Trim(AS400.GetText(Row, Col, Length))
    
    If ProceedToNextScreen("[Enter]", AS400, Exception) = True Then GoTo EndAutomation
    
    AppActivate "Microsoft Excel"
    MsgBox "Student ID:" & vbTab & StudentFile.StudentID, vbInformation, "Automation"
    AS400.Activate = True
    
    'Enter-F3 sequence
    '#1
    If ProceedToNextScreen("[Enter]", AS400, Exception) = True Then GoTo EndAutomation
    If ProceedToNextScreen("[pf3]", AS400, Exception) = True Then GoTo EndAutomation
    '#2
    If ProceedToNextScreen("[Enter]", AS400, Exception) = True Then GoTo EndAutomation
    If ProceedToNextScreen("[pf3]", AS400, Exception) = True Then GoTo EndAutomation
    '#3
    If ProceedToNextScreen("[Enter]", AS400, Exception) = True Then GoTo EndAutomation
    If ProceedToNextScreen("[pf3]", AS400, Exception) = True Then GoTo EndAutomation
    '#4
    If ProceedToNextScreen("[Enter]", AS400, Exception) = True Then GoTo EndAutomation
    If ProceedToNextScreen("[pf3]", AS400, Exception) = True Then GoTo EndAutomation
    
    'Web Times
    Entry = StudentFile.GetWebStartTime: Row = 13: Col = 23: Length = 0
    AS400.SetText Entry, Row, Col
    
    Entry = StudentFile.GetWebEndTime: Row = 14: Col = 23: Length = 0
    AS400.SetText Entry, Row, Col
    
    '#5
    If ProceedToNextScreen("[Enter]", AS400, Exception) = True Then GoTo EndAutomation
    If ProceedToNextScreen("[pf3]", AS400, Exception) = True Then GoTo EndAutomation

    'School Type
    Entry = "HS": Row = 6: Col = 23: Length = 0
    AS400.SetText Entry, Row, Col
    
    'Degree Code
    Entry = "N": Row = 10: Col = 23: Length = 0
    AS400.SetText Entry, Row, Col
    
    'Gender
    Entry = StudentFile.GetGender: Row = 19: Col = 57: Length = 0
    AS400.SetText Entry, Row, Col
    
    '#6
    If ProceedToNextScreen("[Enter]", AS400, Exception) = True Then GoTo EndAutomation
    If ProceedToNextScreen("[pf3]", AS400, Exception) = True Then GoTo EndAutomation
    
    'Back to the address book
    If ProceedToNextScreen("[Enter]", AS400, Exception) = True Then GoTo EndAutomation
    AS400.SendKeys "[Enter]"
    Pause AS400, Exception
    
    'Phone number
    If Len(StudentFile.GetPhoneNumber) >= 1 Then
    
        If ProceedToNextScreen("[pf12]", AS400, Exception) = True Then GoTo EndAutomation
        
        Entry = "C": Row = 4: Col = 21: Length = 0
        AS400.SetText Entry, Row, Col
        
        Entry = StudentFile.GetAreaCode: Row = 11: Col = 9: Length = 0
        AS400.SetText Entry, Row, Col
        
        Entry = StudentFile.GetPhoneNumber: Row = 11: Col = 16: Length = 0
        AS400.SetText Entry, Row, Col
        
        Pause AS400, Exception
        AS400.SendKeys "[Enter]"
        Pause AS400, Exception
        AS400.SendKeys "[pf3]"
        Pause AS400, Exception
        
    End If
    
    'Email
    AS400.SendKeys "[pf5]"
    Pause AS400, Exception
    AS400.SendKeys "[pf4]"
    Pause AS400, Exception
    
    Entry = "C": Row = 3: Col = 18: Length = 0
    AS400.SetText Entry, Row, Col
    
    Entry = "E": Row = 11: Col = 62: Length = 0
    AS400.SetText Entry, Row, Col
    
    Entry = StudentFile.GetEmail: Row = 10: Col = 4: Length = 0
    AS400.SetText Entry, Row, Col
    If ProceedToNextScreen("[Enter]", AS400, Exception) = True Then GoTo EndAutomation
    
    AS400.SendKeys "[pf3]"
    Pause AS400, Exception
    AS400.SendKeys "[pf3]"
    Pause AS400, Exception
    
    If NavigateToHome(AS400, Exception) = False Then GoTo MidEnrollmentNavigationFailure

    '''''''''''''''''''''''''''
    ' Course Registration
    '''''''''''''''''''''''''''
MidEnrollment:

    'Full program enrollment
    Entry = "20": Row = 19: Col = 7: Length = 0
    AS400.SetText Entry, Row, Col
    
    Pause AS400, Exception
    AS400.SendKeys "[Enter]"
    Pause AS400, Exception
    
    'PS screen 66300
    Entry = AddFile: Row = 3: Col = 20: Length = 0
    AS400.SetText Entry, Row, Col
    
    Entry = StudentFile.StudentID: Row = 4: Col = 20: Length = 0
    AS400.SetText Entry, Row, Col
    
    Entry = StudentFile.GetSalesperson: Row = 6: Col = 20: Length = 0
    AS400.SetText Entry, Row, Col
    
    Entry = StudentFile.GetProgramNumber: Row = 7: Col = 20: Length = 0
    AS400.SetText Entry, Row, Col
    
    If Len(StudentFile.GetPONumber) >= 1 Then
        Entry = StudentFile.GetPONumber: Row = 8: Col = 20: Length = 0
        AS400.SetText Entry, Row, Col
    End If
    
    If ProceedToNextScreen("[Enter]", AS400, Exception) = True Then GoTo EndAutomation
    
    'Check for PS screen 66302
    Entry = "": Row = 7: Col = 32: Length = 5
    GetTextString = Trim(AS400.GetText(Row, Col, Length))
    Pause AS400, Exception
    
    If GetTextString = "66302" Then
        AS400.SendKeys "[Enter]"
        Pause AS400, Exception
    End If
    GetTextString = vbNullString
    
    'Tuition
    Entry = "PA": Row = 11: Col = 11: Length = 0
    AS400.SetText Entry, Row, Col
    
    Entry = "TUI": Row = 11: Col = 16: Length = 0
    AS400.SetText Entry, Row, Col
    
    Entry = StudentFile.GetProgramTuition: Row = 11: Col = 54: Length = 0
    AS400.SetText Entry, Row, Col
    
    If ProceedToNextScreen("[Enter]", AS400, Exception) = True Then GoTo EndAutomation
    
    'Enter payment terms
    AS400.SendKeys "[Enter]"
    Pause AS400, Exception
    AS400.SendKeys "[Enter]"
    
    If ProceedToNextScreen("[pf3]", AS400, Exception) = True Then GoTo EndAutomation
    If ProceedToNextScreen("[pf11]", AS400, Exception) = True Then GoTo EndAutomation
    
    Status.Value = "...   ...   ...  (Please Wait)  ...   ...   ..."
    
    'Navigate to Education Inquiry
    AS400.SendKeys "[pf3]"
    Pause AS400, Exception
    
    Entry = "1": Row = 19: Col = 7: Length = 0
    AS400.SetText Entry, Row, Col
    
    AS400.SendKeys "[Enter]"
    Pause AS400, Exception
    
    Entry = "15": Row = 19: Col = 7: Length = 0
    AS400.SetText Entry, Row, Col
    AS400.SendKeys "[Enter]"
    Pause AS400, Exception
    
    Entry = StudentFile.StudentID: Row = 3: Col = 13: Length = 0
    AS400.SetText Entry, Row, Col
    
    AS400.SendKeys "[Enter]"
    Pause AS400, Exception
    
    '''''''''''''''''''''''''''
    ' Transfer Credits option
    '''''''''''''''''''''''''''
    AppActivate "Microsoft Excel"
    If MsgBox("Automation Complete:" & " Student ID #" & StudentFile.StudentID & vbNewLine & vbNewLine & _
        "Total Elapsed Time: " & vbTab & (Timer - StartTime) & " seconds" & vbNewLine & vbNewLine & _
        "DO YOU WISH TO APPLY TRANSFER CREDITS?", vbYesNo, "Automation Complete - Apply TR?") = vbYes Then
        
        Unload RegForm
        
        u_TransferCredits.Show
        
    End If
    
'''''''''''''''''''''''''''
' Cleanup
'''''''''''''''''''''''''''
Cleanup:

    TurnOnExcelDefaults Exception
    Exception.Pop
    
Exit Sub

'''''''''''''''''''''''''''
' Error Handling
'''''''''''''''''''''''''''

ClassError:
    RedMessage = RedMessage & "[m_MainRegistration.RunRegistration]" & Space(1) & _
        "> A critical error has occurred while initializing the class modules:" & vbNewLine & _
        "Error #" & Err.Number & Space(1) & Err.Description & vbNewLine & vbNewLine
Resume Next

UserformError:
    Exception.ErrFlag = True
    RedMessage = RedMessage & Exception.StackTop & Space(1) & _
        "> A userform object has failed to load" & Space(1) & "Error #" & Err.Number & vbNewLine & vbNewLine
Resume Next

AS400Error:
    Exception.ErrFlag = True
    RedMessage = RedMessage & Exception.StackTop & Space(1) & _
        "> The AS400 has failed to initialize" & vbNewLine & vbNewLine & _
        "Please confirm the AS400 is active, and that the session letter is correct, " & _
        "then try again." & _
        "Error #" & Err.Number & Space(1) & Err.Description & vbNewLine & vbNewLine
Resume Next

AcknowledgeError:
    Exception.ErrFlag = True
    AppActivate "Microsoft excel"
    MsgBox "An unexpected error has occurred during the automation, and the application has been stopped." & _
    vbNewLine & vbNewLine & "Please discover where the automation has stopped, and determine " & _
    "if you need to proceed manually from here." & vbNewLine & vbNewLine & _
    "Call Stack Position:" & vbTab & Exception.StackTop & vbNewLine & _
    "Err Number:" & vbTab & Err.Number & vbNewLine & "Err Message:" & Err.Description, _
    vbCritical, "An unknown error has occurred"
GoTo Cleanup

EndAutomation:
    AppActivate "Microsoft excel"
    MsgBox "The automation has been canceled" & vbNewLine & vbNewLine & Exception.StackTop, _
        vbInformation, "Enrollment"
GoTo Cleanup

NavigationFailure:
    If NavigateToHome(AS400, Exception) = False Then
        AppActivate "Microsoft excel"
        MsgBox "The AS/400 has failed to reach the correct screen." & vbNewLine & vbNewLine & _
            "Please navigate manually to the home screen, then attempt to run the application again." & _
            vbNewLine & vbNewLine & Exception.StackTop, vbCritical, "Navigation Failure"
    Else
        GoTo StartEnrollment
    End If
GoTo Cleanup

MidEnrollmentNavigationFailure:
    Dim MsgStr As String
    MsgStr = "The AS/400 has failed to reach the correct screen." & vbNewLine & vbNewLine & _
            "Confirm that the Address Book information has been entered successfully, then " & _
            "proceed with the tuition registration manually." & vbNewLine & vbNewLine & Exception.StackTop
    If Exception.ErrFlag = True Then
        MsgStr = MsgStr & vbTab & "Err Number: " & Exception.ErrNumber & vbNewLine & Exception.ErrDescription
    End If
    If NavigateToHome(AS400, Exception) = False Then
            AppActivate "Microsoft excel"
            MsgBox MsgStr, vbCritical, "Navigation Failure"
    Else
        GoTo MidEnrollment
    End If
GoTo Cleanup

HiddenTestOption:
    RunUnitCheck RegForm, StudentFile, AS400, Exception
GoTo Cleanup

End Sub
