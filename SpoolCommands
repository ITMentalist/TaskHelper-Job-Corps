''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' SpoolCommands (Module)
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
Option Explicit

Public Function Spool(ByVal Label_for_Collection As String, ByRef Exception As cException) _
    As Collection
    
    Select Case Label_for_Collection
    
        Case selReg
        
            Set Spool = PopulateRegistrationCommands(Exception)
        
        Case selName
        
        Case selShip
        
        Case selTR
        
        Case Else
        
    End Select

End Function

Public Sub Add_Set(ByRef CommandCollection As Collection, _
    ByVal String_to_Enter As String, ByVal Row_to_Enter As Long, ByVal Col_to_Enter As Long, _
    Optional ByRef Exception As cException)
    
    If Not Exception Is Nothing Then Exception.Push _
        "SpoolCommands.AddSetText || ... ... ... Sequence (" & CStr(Sequence_Number) & _
        ") String ('" & String_to_Enter & "', " & CStr(Row_to_Enter) & ", " & CStr(Col_to_Enter)
    
    Dim Command As cCommand
    Set Command = New cCommand
        
        Command.CommandLabel = commSetText
        Command.Sequence = Sequence_Number
        Command.ParentLabel = Collection_Label
        Command.EntryString = String_to_Enter
        Command.RowLong = Row_to_Enter
        Command.ColLong = Col_to_Enter
    
    CommandCollection.Add Command
    If Not Exception Is Nothing Then Exception.Pop
        
End Sub

Public Sub Add_Send(ByRef CommandCollection As Collection, _
    ByVal String_to_Enter As String, Optional ByVal Row_to_Enter As Long = 0, _
    Optional ByVal Col_to_Enter As Long = 0, _
    Optional ByRef Exception As cException)
    
    If Not Exception Is Nothing Then Exception.Push _
        "SpoolCommands.AddSendKey || ... ... ... Sequence (" & CStr(Sequence_Number) & _
        ") String ('" & String_to_Enter & "', " & CStr(Row_to_Enter) & ", " & CStr(Col_to_Enter)
    
    Dim Command As cCommand
    Set Command = New cCommand
    
        Command.CommandLabel = commSendKey
        Command.EntryString = String_to_Enter
        Command.RowLong = Row_to_Enter
        Command.ColLong = Col_to_Enter
    
    CommandCollection.Add Command
    If Not Exception Is Nothing Then Exception.Pop
        
End Sub

Public Sub Add_Get(ByRef CommandCollection As Collection, _
    ByVal Name_of_Value_to_Return As String, _
    ByVal String_to_Return As String, ByVal Row_to_Get As Long, ByVal Col_to_Get As Long, _
    ByVal Length_to_Get As Long, Optional ByRef Exception As cException)
    
    If Not Exception Is Nothing Then Exception.Push _
        "SpoolCommands.AddGetText || ... ... ... Sequence (" & CStr(Sequence_Number) & _
        ") String ('" & String_to_Return & "', " & CStr(Row_to_Get) & ", " & CStr(Col_to_Get) & _
        ", " & CStr(Length_to_Get) & " characters"
    
    Dim Command As cCommand
    Set Command = New cCommand
        
        Command.CommandLabel = commGetText
        Command.NameOfValue = Name_of_Value_to_Return
        Command.ReturnString = String_to_Return
        Command.RowLong = Row_to_Get
        Command.ColLong = Col_to_Get
        Command.LenLong = Length_to_Get
    
    CommandCollection.Add Command
    If Not Exception Is Nothing Then Exception.Pop

End Sub

Public Sub Add_Search(ByRef CommandCollection As Collection, _
    ByVal String_to_Enter As String, Optional ByVal Start_Row As Long = 1, _
    Optional ByVal Start_Col As Long = 1, _
    Optional ByRef Exception As cException)
    
    If Not Exception Is Nothing Then Exception.Push _
        "SpoolCommands.AddSearchText || ... ... ... Sequence (" & CStr(Sequence_Number) & _
        ") String ('" & String_to_Enter & "', " & CStr(Start_Row) & ", " & CStr(Start_Col)
    
    Dim Command As cCommand
    Set Command = New cCommand
        
        Command.CommandLabel = commSearchText
        Command.ReturnString = String_to_Enter
        Command.RowLong = Row_to_Get
        Command.ColLong = Col_to_Get
        Command.LenLong = Length_to_Get
    
    CommandCollection.Add Command
    If Not Exception Is Nothing Then Exception.Pop

End Sub

Public Sub Add_Custom(ByRef CommandCollection As Collection, _
    ByVal Name_of_Custom_Command As String, Optional ByRef Exception As cException)
    
    If Not Exception Is Nothing Then Exception.Push _
        "SpoolCommands.AddCustomCommand || ... ... ... Sequence (" & CStr(Sequence_Number) & _
        ") String ('" & Name_of_Custom_Command & "'"
    
    Dim Command As cCommand
    Set Command = New cCommand
    
        Command.CommandLabel = commCustom
        Command.CallCustom = Name_of_Custom_Command
        
    CommandCollection.Add Command
    If Not Exception Is Nothing Then Exception.Pop

End Sub

