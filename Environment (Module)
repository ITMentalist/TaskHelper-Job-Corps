''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' Environment (Module)
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

Option Explicit

'Sets Debug Mode
Public Const Debugger As Boolean = True

'Sets color constants. The Variant type is used so as to accommodate different formats,
Public Const cGrey As Variant = &H80000000
Public Const cWhite As Variant = &H80000005

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' GetSheetFromCodeName (Function)
'
'|wb| = [Workbook] Name of the Workbook. |CodeName| = [String] The worksheet's code/secret name
'
'Returns Worksheet As Excel.Worksheet

'Referencing a worksheet's codename instead of the worksheet's regular name (or position)
'   allows users to change the sheet's name (or position) without breaking the relevant macros.
'This function allows worksheet codenames to be referenced even across separate workbooks.

'(SOURCE) D Glancy. (2012, Feb 10). Using Worksheet CodeNames in Other Workbooks [Web log].
'   Retrieved from http://yoursumbuddy.com/using-worksheet-codenames-in-other-workbooks/
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
Public Function GetSheetFromCodeName(wb As Workbook, CodeName As String) As Excel.Worksheet

Dim wsCN As Excel.Worksheet

If Not Debugger Then On Error Resume Next Else On Error GoTo 0

For Each wsCN In wb.Worksheets

     If wsCN.CodeName = CodeName Then
         Set GetSheetFromCodeName = wsCN
         Exit For
     End If
Next wsCN

End Function

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' NavigateSheets (Sub)
'
' |strStartSheetCodename| = [String] Name of worksheet to navigate from.
' |strEndSheetCodename| = [String] Name of worksheet to naviage to.
'
'This sub streamlines the user experience by showing only one worksheet at a time.  When the user clicks the
'   commandbutton to move to the next sheet, the previous one closes.
'
'Instead of referencing the sheets' public name, this sub references the sheets' codename.
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
Public Sub NavigateSheets(strStartSheetCodename As String, strEndSheetCodename As String)

Dim wsStart As Excel.Worksheet  'Stores starting worksheet
Dim wsEnd As Excel.Worksheet    'Stores ending worksheet

If Not Debugger Then On Error Resume Next Else On Error GoTo 0

'Calls the GetSheetFromCodeName function
Set wsStart = GetSheetFromCodeName(Workbooks("TaskHelper VBA iSeries.xlsm"), strStartSheetCodename)
Set wsEnd = GetSheetFromCodeName(Workbooks("TaskHelper VBA iSeries.xlsm"), strEndSheetCodename)

wsEnd.Visible = xlSheetVisible
wsEnd.Activate

wsStart.Visible = xlSheetHidden

End Sub


''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' ChangeLocks
'
'Accepts an array of userform textboxes.  Locks or unlocks as needed.
'
'The color variables are dimensioned as variant so as to allow for different
'   formatting options.
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
Public Sub ChangeLocks(PassArray() As Object, passBoolean As Boolean, changeover As Integer)

Dim oppositeBoolean As Boolean
Dim i As Integer
Dim var_Selected_Color As Variant
Dim var_Opposite_Color As Variant

oppositeBoolean = Not passBoolean

'Determines color selection based on passed bool value
If passBoolean = True Then
    var_Selected_Color = cWhite
    var_Opposite_Color = cGrey
Else:
    var_Selected_Color = cGrey
    var_Opposite_Color = cWhite
End If

For i = LBound(PassArray) To UBound(PassArray)

    If i < changeover Then
    
        'Unlocks if passed bool is true; locks if false
        PassArray(i).Locked = oppositeBoolean
        PassArray(i).BackColor = var_Selected_Color
        'PassArray(i) = vbNullString    'Necessary? [...]
    
    Else:

        'Locks if passed bool is true; unlocks if false
        PassArray(i).Locked = passBoolean
        PassArray(i).BackColor = var_Opposite_Color
        'PassArray(i) = vbNullString    'Necessary? [...]

    End If

Next i

End Sub

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' PassProgramTextboxes
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
Public Sub PassProgramTextboxes(ByRef passArr() As Object, ByVal passForm As MSForms.UserForm)
Set passArr(0) = passForm.ProgramNumber_Textbox
Set passArr(1) = passForm.ProgramTuition_Textbox
Set passArr(2) = passForm.ClassMod1_Textbox
Set passArr(3) = passForm.ClassMod2_Textbox
Set passArr(4) = passForm.ClassMod3_Textbox
Set passArr(5) = passForm.ClassMod4_Textbox
Set passArr(6) = passForm.ClassMod5_Textbox
Set passArr(7) = passForm.ClassMod6_Textbox
Set passArr(8) = passForm.ClassMod7_Textbox
Set passArr(9) = passForm.ClassTuition1_Textbox
Set passArr(10) = passForm.ClassTuition2_Textbox
Set passArr(11) = passForm.ClassTuition3_Textbox
Set passArr(12) = passForm.ClassTuition4_Textbox
Set passArr(13) = passForm.ClassTuition5_Textbox
Set passArr(14) = passForm.ClassTuition6_Textbox
Set passArr(15) = passForm.ClassTuition7_Textbox
End Sub

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' PassStudentTextboxes
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
Public Sub PassStudentTextboxes(ByRef passArr() As Object, ByVal passForm As MSForms.UserForm)
Set passArr(0) = passForm.StudentID_Textbox
Set passArr(1) = passForm.Areacode_Textbox
Set passArr(2) = passForm.Phonenumber_Textbox
Set passArr(3) = passForm.Email_Textbox
Set passArr(4) = passForm.AddressLine1_Textbox
Set passArr(5) = passForm.AddressLine2_Textbox
Set passArr(6) = passForm.AddressLine3_Textbox
Set passArr(7) = passForm.AddressLine4_Textbox
Set passArr(8) = passForm.City_Textbox
Set passArr(9) = passForm.StateAbbrev_Textbox
Set passArr(10) = passForm.Zipcode_Textbox
End Sub


''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' 
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''


''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' LoadErrorClass (Sub)
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
Public Sub LoadErrorClass(ByRef passException As cException)

End Sub


''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' LoadStudentFile (Sub)
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
Public Sub LoadStudentFile(ByRef passStudent As cStudentFile, ByVal passUser As MSForms.Userform, ByRef passException As cException)

'On Error GoTo handle_if_textbox_fails_to_pass

passStudent.Userform = passUser
passStudent.FirstNameTextbox = passUser.Firstname_Textbox
passStudent.MiddleNameTextbox = passUser.Middlename_Textbox
passStudent.LastNameTextbox = passUser.Lastname_Textbox
passStudent.SalespersonTextbox = passUser.Salesperson_Textbox
passStudent.StudentIDTextbox = passUser.StudentID_Textbox
passStudent.AreaCodeTextbox = passUser.Areacode_Textbox
passStudent.PhoneNumberTextbox = passUser.Phonenumber_Textbox
passStudent.EmailTextbox = passUser.Email_Textbox
passStudent.AddressLine1Textbox = passUser.AddressLine1_Textbox
passStudent.AddressLine2Textbox = passUser.AddressLine2_Textbox
passStudent.AddressLine3Textbox = passUser.AddressLine3_Textbox
passStudent.AddressLine4Textbox = passUser.AddressLine4_Textbox
passStudent.CityTextbox = passUser.City_Textbox
passStudent.StateTextbox = passUser.StateAbbrev_Textbox
passStudent.ZipCodeTextbox = passUser.Zipcode_Textbox
passStudent.ProgramNumberTextbox = passUser.ProgramNumber_Textbox
passStudent.ProgramTuitionTextbox = passUser.ProgramTuition_Textbox
passStudent.ClassMod1Textbox = passUser.ClassMod1_Textbox
passStudent.ClassMod2Textbox = passUser.ClassMod2_Textbox
passStudent.ClassMod3Textbox = passUser.ClassMod3_Textbox
passStudent.ClassMod4Textbox = passUser.ClassMod4_Textbox
passStudent.ClassMod5Textbox = passUser.ClassMod5_Textbox
passStudent.ClassMod6Textbox = passUser.ClassMod6_Textbox
passStudent.ClassMod7Textbox = passUser.ClassMod7_Textbox
passStudent.ClassTuition1Textbox = passUser.ClassTuition1_Textbox
passStudent.ClassTuition2Textbox = passUser.ClassTuition2_Textbox
passStudent.ClassTuition3Textbox = passUser.ClassTuition3_Textbox
passStudent.ClassTuition4Textbox = passUser.ClassTuition4_Textbox
passStudent.ClassTuition5Textbox = passUser.ClassTuition5_Textbox
passStudent.ClassTuition6Textbox = passUser.ClassTuition6_Textbox
passStudent.ClassTuition7Textbox = passUser.ClassTuition7_Textbox
passStudent.ParentInvoiceTextbox = passUser.ParentInvoice_Textbox
passStudent.StudentTuitionTextbox = passUser.StudentTuition_Textbox
passStudent.StudentFeesTextbox = passUser.StudentFees_Textbox
passStudent.StudentInvoiceTextbox = passUser.StudentInvoice_Textbox
passStudent.DownPayTextbox = passUser.EnterDownPay_Textbox
passStudent.NumberOfMonthsTextbox = passUser.EnterNumOfMonths_Textbox
passStudent.DollarPerMonthTextbox = passUser.EnterDollarPerMonth_Textbox
passStudent.SessionComboBox = passUser.Session_ComboBox
passStudent.ParentNumberComboBox = passUser.ParentNumber_ComboBox
passStudent.PrefixCodeComboBox = passUser.PrefixCode_ComboBox
passStudent.AutomationComboBox = passUser.Automation_ComboBox
passStudent.ProofHSCheckbox = passUser.ProofHS_Checkbox
passStudent.ParentStatusOptionButton = passUser.
passStudent.StudentStatusOptionButton = passUser.
passStudent.MaleOptionButton = passUser.
passStudent.FemaleOptionButton = passUser.
passStudent.CalcByDollarPerMonthOptionButton = passUser.
passStudent.IndividualCreditsOptionButton = passUser.
passStudent.CareerProgramOptionButton = passUser.
passStudent.CollegeSemesterOptionButton = passUser.
passStudent.CalcByNumOfMonthsOptionButton = passUser.
passStudent.PayInFullOptionButton = passUser.
passStudent.NoCostOptionButton = passUser.

'Check flags for failures

End Sub

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' LoadCommands (Sub)
'Expected name of table columns: Action | Item | Row | Col | Len
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
Public Sub LoadCommands(ByRef Command As cCommand, ByRef passCommands As Collection, ByVal passTable As Excel.ListObject, ByRef passException As cException)

Dim Lrow As Excel.ListRow

For Each Lrow In passTable.ListRows
  Set Command = New Command
  Command.Action = Trim(passTable.ListColumn("Action").Value)
  Command.Item = Trim(passTable.ListColumn("Item").Value)
  Command.Row = Trim(passTable.ListColumn("Row").Value)
  Command.Col = Trim(passTable.ListColumn("Col").Value)
  Command.Len = Trim(passTable.ListColumn("Len").Value)
  passCommands.Add Command
Next Lrow

'Check flags for failures

End Sub

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' LoadAS400 (Sub)
'
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
Public Sub LoadAS400(ByRef passAS400 As cAS400, ByRef passException As cException)


End Sub

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' FinalEnrollmentChecks (Function)
'
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
Public Function FinalEnrollmentChecks(ByVal passStudent As cStudentFile, ByVal passAS400 As cAS400, ByVal passException As cException) As Boolean

End Function
