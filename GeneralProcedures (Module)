''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' GeneralProcedures (Module)
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' Provides a series of public procedures for use across multiple applications
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
Option Explicit

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' RestrictToPositiveWholeNumbers (Public Sub)
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
Public Sub RestrictToPostiveWholeNumbers(KeyAscii As MSForms.ReturnInteger)
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' Restricts the textbox to accept only whole numbers
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

Select Case KeyAscii
     Case Asc("0") To Asc("9")
     Case Else
         KeyAscii = 0
 End Select

End Sub

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' RestrictToPostiveFloatNumbers (Public Sub)
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
Public Sub RestrictToPostiveFloatNumbers(KeyAscii As MSForms.ReturnInteger, str_textbox As String)
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'Restricts the textbox to accept only integers and floats
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

Select Case KeyAscii
     Case Asc("0") To Asc("9")
     Case Asc(".")
         If InStr(1, str_textbox, ".") > 0 Then
             KeyAscii = 0
         End If
     Case Else
         KeyAscii = 0
 End Select

End Sub

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' TurnOffExcelDefaults (Public Sub)
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
Public Sub TurnOffExcelDefaults(Optional ByRef Exception As cException)
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' Turns off certain Excel settings to improve the overall processing speed
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

    'Pass error handling up the call stack
    On Error GoTo 0

    If Not Exception Is Nothing Then Exception.Push "GeneralProcedures.TurnOffExcelDefaults"

    Application.ScreenUpdating = False
    Application.DisplayAlerts = False
    Application.Calculation = xlCalculationManual
    
Cleanup:
    
    If Not Exception Is Nothing Then Exception.Pop
    
End Sub

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' TurnOnExcelDefaults (Public Sub)
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
Public Sub TurnOnExcelDefaults(Optional ByRef Exception As cException)
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' Returns the Excel settings to their default values
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

    'Pass error handling up the call stack
    On Error GoTo 0

    If Not Exception Is Nothing Then Exception.Push "GeneralProcedures.TurnOnExcelDefaults"
    
    Application.Calculation = xlCalculationAutomatic
    Application.DisplayAlerts = True
    Application.ScreenUpdating = True
    
Cleanup:
    
    If Not Exception Is Nothing Then Exception.Pop
    
End Sub

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' InitializeAS400 (Public Sub)
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
Public Sub InitializeAS400(ByRef AS400 As cAS400, ByVal Letter As String, _
    Optional ByRef Exception As cException)
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' Purpose:      Connects VBA to the AS/400

' Input:        The custom AS400 class object _
                The AS/400's session name as a single string value _
                (Optional) The custom Exception class object _

' Output:       The modified AS400 class object _
                (Optional) The modified Exception class object _

' Assumptions:  The custom AS400 class object works w/o error _
                The session name is a valid entry _

' Handles Errors:   No
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
    'Passes error handling up the call stack
    On Error GoTo 0
    
    If Not Exception Is Nothing Then Exception.Push "GeneralProcedures.InitializeAS400"

    AS400.Name = Trim(Letter)
    
    Set AS400.Session = CreateObject("PCOMM.autECLSession")
    Set AS400.Metrics = CreateObject("PCOMM.autECLWinMetrics")
    Set AS400.Connection = CreateObject("PCOMM.autECLConnList")
    
    AS400.Session.SetConnectionByName (AS400.Name)
    AS400.Metrics.SetConnectionByName (AS400.Name)
    
    'Refreshing the connection list is not required, _
        but the IBM documentation recommends it
    AS400.Refresh
    
Cleanup:

    If Not Exception Is Nothing Then Exception.Pop

End Sub

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' Pause (Public Sub)
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
Public Sub Pause(ByVal AS400 As cAS400, Optional ByRef Exception As cException)
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' Purpose:      Prevents VBA from overrunning the AS/400

' Input:        The custom AS400 class object _
                (Optional) The custom Exception class object _

' Output:       (Optional) The modified Exception class object _

' Assumptions:  The class objects are valid _
                The AS/400 is connected _

' Handles Errors:   No
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
    'Passes error handling up the call stack
    On Error GoTo 0

    If Not Exception Is Nothing Then Exception.Push "GeneralProcedures.Pause"

    AS400.Wait 40
    AS400.WaitForApp
    AS400.Wait AS400.Time

Cleanup:

    If Not Exception Is Nothing Then Exception.Pop

End Sub

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' NavigateToHome
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
Public Function NavigateToHome(ByVal AS400 As cAS400, Optional ByRef Exception As cException) As Boolean
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' Purpose:      Navigates the AS/400's presentation space _
                    to the agency's home screen. _

' Input:        The custom AS400 class object _
                The custom Exception class object _

' Output:       TRUE if successful _
                FALSE if unsuccessful _
                Procedural actions

' Assumptions:  The class objects are valid _
                The AS/400 is connected _
                No changes are made to the AS/400 that would cause this _
                    procedure to "run off the rails" _

' Handles Errors:   Yes
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
    On Error GoTo NavigationError
    
    If Not Exception Is Nothing Then Exception.Push "GeneralProcedures.NavigateToHome"
    
    '''''''''''''''''''''''''''
    ' General variables
    '''''''''''''''''''''''''''
    NavigateToHome = True

    Dim GetTextString As String: GetTextString = vbNullString

    Dim MaxAttempts As Integer: MaxAttempts = 5
    
    Dim i As Integer: i = 0
    
    Dim PrevTime As Long: PrevTime = AS400.Time
    AS400.Time = 40
    
    AS400.Activate = True
    
    'AS/400 modular values
    Dim Row As Long: Row = 0
    Dim Col As Long: Col = 0
    Dim Length As Long: Length = 0
    
    '''''''''''''''''''''''''''
    ' Navigation Loop
    '''''''''''''''''''''''''''
StartLoop:

    Do
    
        Pause AS400
        
        Row = 1: Col = 2: Length = 8
        GetTextString = AS400.GetText(Row, Col, Length)
        
        Pause AS400
    
        Select Case GetTextString
        
            'PS: BNIMAIN (Destination)
            Case " BNIMAIN"
                Pause AS400
                Exit Do
                
            'PS: BNICS
            Case " BNICS  "
                AS400.SendKeys "[pf12]"
                Pause AS400
                Exit Do
                
            'PS: 66300
            Case " 66300  "
                AS400.SendKeys ("[pf3]")
                Pause AS400
                Exit Do
                
            'PS: 66340
            Case " 66340  "
                AS400.SendKeys ("[pf3]")
                Pause AS400
                Exit Do
                
            'PS: Student Service Inquiry (1.14.)
            Case "603131_B"
                AS400.SendKeys "[pf3]"
            
            'Address Book Information
            Case "01051   "
                AS400.SendKeys ("[pf3]")
                
            'PS: (1.14.), Customer Ledger Inquiry
            Case " 032002 "
                AS400.SendKeys ("[pf3]")

            'PS: (1.14.), ICS Cancellation Maintenance
            Case "631001  "
                AS400.SendKeys ("[pf3]")
                
            'PS: (1.14.), Student Supplemental
            Case "60110   "
                AS400.SendKeys ("[pf3]")

            'PS: (1.14.), Student Course Master
            Case "60210   "
                AS400.SendKeys ("[pf3]")
                
            Case "60211   "
                AS400.SendKeys ("[pf3]")
                Pause AS400
                AS400.SendKeys ("[pf3]")

            'PS: (1.14.), Shipping Screen
            Case "42045   "
                AS400.SendKeys ("[pf3]")

            'PS: ICS Accounting Main Menu
            Case " ICSACCT"
                AS400.SendKeys ("[pf12]")

            'PS: Main Menu
            Case "ICSMAIN "
                AS400.SetText "6", 20, 7
                AS400.SendKeys ("[Enter]")

            'Library List Selection
            Case " 98VL   "
                AS400.SetText "1", 6, 10
                AS400.SendKeys ("[Enter]")

            'Product File Maintenance
            Case " BNIPROD"
                AS400.SendKeys ("[pf12]")
                
            'Note Maintenance
            Case " 55192  "
                AS400.SendKeys ("[pf3]")
                
            'Education Screen
            Case " 55192  "
                AS400.SendKeys ("[pf3]")
                
            'Name Search
            Case "603132_B"
                AS400.SendKeys ("[pf3]")
                
            Case "631001  "
                AS400.SendKeys ("[pf3]")
                Pause AS400
                AS400.SendKeys ("[pf3]")
                
            Case " BNISOP "
                AS400.SendKeys ("[pf12]")
                Pause AS400
                AS400.SendKeys ("[pf12]")
                
            Case " 42040  "
                AS400.SendKeys ("[pf3]")
                Pause AS400
                AS400.SendKeys ("[pf12]")
                Pause AS400
                AS400.SendKeys ("[pf12]")
                
            Case Else
                AS400.SendKeys ("[pf3]")
                Pause AS400
                AS400.SendKeys ("[pf12]")
                Pause AS400
                AS400.SendKeys ("[pf3]")

        End Select
        
        'loop counter
        i = i + 1
        
        Pause AS400
    
    Loop Until i >= MaxAttempts
    
    '''''''''''''''''''''''''''
    ' Confirmation
    '''''''''''''''''''''''''''
    
    Row = 1: Col = 3: Length = 7
    GetTextString = AS400.GetText(Row, Col, Length)
    
    If GetTextString = "BNIMAIN" Then
        NavigateToHome = True
    Else
        NavigateToHome = False
    End If

'''''''''''''''''''''''''''
'Cleanup
'''''''''''''''''''''''''''
Cleanup:

    AS400.Time = PrevTime
    If Not Exception Is Nothing Then Exception.Pop
    
Exit Function

'''''''''''''''''''''''''''
'Error Handling
'''''''''''''''''''''''''''
NavigationError:
    NavigateToHome = False
    If Not Exception Is Nothing Then Exception.ErrFlag = True
    If Not Exception Is Nothing Then Exception.ErrDescription = Err.Description
    If Not Exception Is Nothing Then Exception.ErrNumber = Err.Number
GoTo Cleanup

End Function
