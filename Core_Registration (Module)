''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' # Core_Registration (Module)
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' InitializeAS400 (Public Sub)
'
'Sets the connections to the AS/400 Host Automation Library. _
    The procedure assumes the intended AS/400 session has already _
    been stored within the class object. _
    Success can also be checked by the class object's ErrorFlag property
'
'Note: The "AS400.[Property] language are call to a custom AS400 class. _
    This class is simply being used store the required AS/400 objects.
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
Public Sub InitializeAS400(ByRef AS400 As cAS400)

    On Error GoTo ErrHandler

    Set AS400.Session = CreateObject("PCOMM.autECLSession")
    Set AS400.Metrics = CreateObject("PCOMM.autECLWinMetrics")
    Set AS400.Connection = CreateObject("PCOMM.autECLConnList")

    AS400.Session.SetConnectionByName (AS400.SessionName)
    AS400.Metrics.SetConnectionByName (AS400.SessionName)
    AS400.Metrics.Refresh

Exit Sub

ErrHandler: AS400.ErrorFlag = True

End Sub

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' Excel Defaults
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
Public Sub TurnOffExcelDefaults()

    Application.ScreenUpdating = False
    Application.DisplayAlerts = False
    Application.Calculation = xlCalculationManual

End Sub

Public Sub TurnOnExcelDefaults()

    Application.Calculation = xlCalculationAutomatic
    Application.DisplayAlerts = True
    Application.ScreenUpdating = True

End Sub

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' WaitForReady (Public Sub)
'
' Prevents the script from overrunning the AS/400. _
The Wait command accepts milliseconds as Long. _
The second Wait command passes in the milliseconds determined _
    by the user's requested automation speed; it assumes
    the property is correct and valid.
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
Public Sub WaitForReady(ByVal AS400 As cAS400)

    Dim ms As Long
    ms = 10

    AS400.Presentation.Wait ms
    AS400.Operator.WaitForAppAvailable
    AS400.Operator.WaitForInputReady
    AS400.Presentation AS400.Milliseconds

End Sub

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' RunRegistration (Private Sub)
'
' Automates course registration within the B2B and Individual College Environment. _
Relies on IBM's Host Automation Class Library to control the AS/400 from VBA.

'Accepts the registration userform, as well as the CommandList table from the main worksheet. _
Calls to external procedures to interpret the environment-specific data. _
Executes the actions as listed by the interpreted CommandList table. _
Outputs confirmation messageboxes as needed. _
Exports the interpreted data to a separate data worksheet. _
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
Private Sub RunRegistration(ByVal RegForm As MSForms.UserForm, ByVal wSheet As Excel.Worksheet)

    ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
    ' Set the required classes and collections
    ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
    Dim Exception As cException
    Set Exception = New cException
    Exception.Push "Core_Registration.RunRegistration"

    Dim StudentFile As cStudentFile
    Set StudentFile = New cStudentFile

    Dim AS400 As cAS400
    Set AS400 = New cAS400

    Dim Commands As Collection
    Set Commands = New Collection

    Dim Command As cCommand

    ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
    ' General variables
    ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
    Dim passTable As Excel.ListObject
    Dim CommandCount As Integer
    CommandCount = 0

    ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
    ' Loads the class objects
    ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
    Exception.Push "Core_Registration.TurnOffExcelDefaults"
        TurnOffExcelDefaults
    Exception.Pop
    
    LoadUserformObjects StudentFile, RegForm, Exception
    
    'Set the subsequent error handling based on user selection
    Select Case Exception.Handling
        Case "Fast"
            On Error GoTo AcknowledgeError
        Case "Slow"
            On Error GoTo AcknowledgeError
        Case "StopEach"
            On Error GoTo AcknowledgeError
        Case "Debug"
            On Error GoTo 0
        Case Else
            On Error GoTo 0
    End Select
    
    LoadAS400 AS400, StudentFile, Exception
    
    ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
    ' Loads the command list
    ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
    passTable = DetermineTable(StudentFile, wSheet, Exception)
    LoadCommands Command, Commands, passTable, Exception
    CommandCount = Commands.count

    ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
    ' Final confirmations
    ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
    FinalEnrollmentCheck:
    If ApproveRegistration(StudentFile, AS400, Exception) = False Then GoTo Cleanup

    ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
    ' Primary Execution
    ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
    For Each Command In Commands

        'Recognized Actions: Home, Set, Send, Check, Get
        Select Case Command.Action

            'Case Is "Home"
    
            'Case Is "Set"
    
            'Case Is "Send"
    
            'Case Is "Check"
    
            'Case Is "Get"
    
            'Case Else
    
        End Select
    
        'Call Wait

    Next Command

    ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
    ' Output
    ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
Cleanup:
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
    Exception.Push "Core_Registration.TurnOnExcelDefaults"
        TurnOnExcelDefaults
    Exception.Pop
    Exception.Pop
Exit Sub
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' Error Handlers
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
AcknowledgeError:
    Exception.ErrFlag = True
    Exception.ErrNumber = Err.Number
    Exception.ErrDescription = Err.Description
Resume FinalEnrollmentCheck

End Sub


