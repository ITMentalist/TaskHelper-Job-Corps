''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' # Core_Registration (Module)
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' InitializeAS400 (Public Sub)
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
Public Sub InitializeAS400(ByRef AS400 As cAS400)

    'Call Stack

    'Pass error handling up the call stack
    On Error GoTo 0

    Set AS400.Session = CreateObject("PCOMM.autECLSession")
    Set AS400.Metrics = CreateObject("PCOMM.autECLWinMetrics")
    Set AS400.Connection = CreateObject("PCOMM.autECLConnList")

    AS400.Session.SetConnectionByName (AS400.SessionName)
    AS400.Metrics.SetConnectionByName (AS400.SessionName)
    AS400.Metrics.Refresh

End Sub

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' Excel Defaults
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
Public Sub TurnOffExcelDefaults()

    'Pass error handling up the call stack
    On Error GoTo 0

    Application.ScreenUpdating = False
    Application.DisplayAlerts = False
    Application.Calculation = xlCalculationManual

End Sub

Public Sub TurnOnExcelDefaults()

    'Pass error handling up the call stack
    On Error GoTo 0

    Application.Calculation = xlCalculationAutomatic
    Application.DisplayAlerts = True
    Application.ScreenUpdating = True

End Sub

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' WaitForReady (Public Sub)
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
Public Sub WaitForReady(ByVal AS400 As cAS400)

    'Pass error handling up the call stack
    On Error GoTo 0

    Dim InitialWaitTime As Long
    InitialWaitTime = 10

    AS400.Presentation.Wait InitialWaitTime
    AS400.Operator.WaitForAppAvailable
    AS400.Operator.WaitForInputReady
    AS400.Presentation AS400.Milliseconds

End Sub

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' RunRegistration (Private Sub)
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
Public Sub RunRegistration(ByVal RegForm As MSForms.UserForm)

    ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
    ' Set the required classes and collections
    ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
    Dim Exception As cException
    Set Exception = New cException
    Exception.Push "Core_Registration.RunRegistration"

    Dim StudentFile As cStudentFile
    Set StudentFile = New cStudentFile

    Dim AS400 As cAS400
    Set AS400 = New cAS400

    ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
    ' General variables
    ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
    Dim StopEachScreen As Boolean
    StopEachScreen = False

    ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
    ' Loads the class objects
    ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
    Exception.Push "Core_Registration.TurnOffExcelDefaults"
        TurnOffExcelDefaults
    Exception.Pop
    
    LoadUserformObjects StudentFile, RegForm, Exception
    
    LoadAS400 AS400, StudentFile, Exception
    AS400.Handling = Trim(StudentFile.GetAutomation)
    
    'Set subsequent settings based on user selection
    Select Case AS400.Handling
        Case "Fast"
            On Error GoTo 0
            AS400.Milliseconds = 75
        Case "Slow"
            On Error GoTo AcknowledgeError
            AS400.Milliseconds = 900
        Case "StopEach"
            On Error GoTo AcknowledgeError
            StopEachScreen = True
            AS400.Milliseconds = 200
        Case "Debug"
            On Error GoTo 0
            AS400.Milliseconds = 400
        Case Else
            On Error GoTo 0
            StopEachScreen = True
            AS400.Milliseconds = 400
    End Select
    
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
LoadCommandList:
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

    Set passTable = DetermineTable(StudentFile, wSheet, Exception)
    LoadCommands Command, Commands, passTable, Exception
    CommandCount = Commands.count

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
FinalEnrollmentCheck:
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

    If ApproveRegistration(StudentFile, AS400, Exception) = False Then
        GoTo Cleanup
    End If

    ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
    ' Primary Execution
    ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
    If AS400.Handling = "Fast" Or AS400.Handling = "Slow" Or AS400.Handling = "StopEach" Then
        On Error GoTo ErrorOnPrimaryExecution
    Else
        On Error GoTo 0
    End If
    
    For Each Command In Commands

        'Recognized Actions: || home send set search get table ||
        Select Case Command.Action

            Case "home"
            
                ExecuteHomeCommand AS400, Exception
                WaitForReady AS400
                
                If StopEachScreen = True Then If AbortRegistration(AS400, StopEachScreen, Exception) = True Then GoTo Cleanup
    
            Case "send"
            
                If StopEachScreen = True Then If AbortRegistration(AS400, StopEachScreen, Exception) = True Then GoTo Cleanup
                ExecuteSendCommand Command, AS400, Exception
                WaitForReady AS400
    
            Case "set"
            
                ExecuteSetCommand Command, AS400, StudentFile, Exception
    
            Case "search"
            
                If SearchHasFailed(Command, AS400, Exception) = True Then GoTo Cleanup
                WaitForReady AS400
    
            Case "get"
            
                ExecuteGetCommand Command, AS400, StudentFile, Exception
                WaitForReady AS400
            
            Case "table"
            
                If Command.Item = "End" Then
                    GoTo Cleanup
                Else
                    AdjustTableVariables Command, AS400, StudentFile, Exception
                    WaitForReady AS400
                    GoTo LoadCommandList
                End If
    
            Case Else
            
                If StopEachScreen = True Then If AbortRegistration(AS400, StopEachScreen, Exception) = True Then GoTo Cleanup
    
        End Select

    Next Command

    ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
    ' Output
    ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
Cleanup:
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
    Exception.Push "Core_Registration.TurnOnExcelDefaults"
        TurnOnExcelDefaults
    Exception.Pop
    Exception.Pop
Exit Sub

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' Error Handlers
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
AcknowledgeError:
    Exception.ErrFlag = True
    Exception.ErrNumber = Err.Number
    Exception.ErrDescription = Err.Description
Resume FinalEnrollmentCheck

ErrorOnPrimaryExecution:

Resume Next

End Sub
